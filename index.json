[{"categories":["LLM"],"content":"为什么系统爱好者都应该学习大模型？ 在当今AI技术浪潮中，掌握大模型知识已成为系统开发者的必备技能。通过参与斯坦福CS336大模型系统课程，开始从零构建大模型的实践之旅。这门课程很可能在未来3年内成为系统领域的标杆课程（正如CMU 15-445数据库课程近年来的地位）。 ","date":"2025-06-14","objectID":"/cs336/:1:0","tags":["CS336","LLM"],"title":"斯坦福CS336：从零开始的语言模型","uri":"/cs336/"},{"categories":["LLM"],"content":"作业1：微型语言模型实现 通过以下三个小节实现了一个小型语言模型。 Tokenizer设计与实现 模型架构编码（含Self-Attention机制） 优化器开发 作业地址： Assignment1-Basics GitHub仓库 接下来我将分享完成作业的一部分细节和心得。 ","date":"2025-06-14","objectID":"/cs336/:1:1","tags":["CS336","LLM"],"title":"斯坦福CS336：从零开始的语言模型","uri":"/cs336/"},{"categories":["Guides"],"content":"写在开头 当今，大部分平台已逐步从“一次性买断”过渡到“订阅制”，1Password 8 也是如此。公司为了维持经营、继续发展做出此番举动也并非不可理解。 截止至 2025 年 3 月，1Password 8 个人版每年收费 USD $35.88，Teams 基础版 (10 人) 每年收费 USD $239.4。 而只要你申请通过了 1Password for Open Source Project，你就可以免费获得永久的 1Password for Teams 订阅，这实在是太良心了。 当你看到 1Password for Open Source 的 GitHub 页面上所写的这段话便可了解他们的意图。 It’s fair to say that 1Password wouldn’t exist without the open source community, so we want to give back and help teams be more productive and secure. 说实话，1Password 的出现根本离不开开源的社群，因此我们决定回馈并帮助那些开源团队变得更加高效且安全。 ","date":"2025-03-14","objectID":"/applying-1password-open-source-plan/:1:0","tags":["Apply","1Password","OpenSource"],"title":"通过开源项目申请 1Password OpenSource 以获得 Teams 订阅许可证","uri":"/applying-1password-open-source-plan/"},{"categories":["Guides"],"content":"申请要求 1Password 对于开源项目的要求其实并不严格 你需要符合以下其一要求： 你是一个已创建至少 30 天且活跃的开源项目的核心贡献者 你是一个开源社区见面会/活动/会议的组织者 另外，你的项目必须： 使用标准开源许可证 非商业性质 ","date":"2025-03-14","objectID":"/applying-1password-open-source-plan/:2:0","tags":["Apply","1Password","OpenSource"],"title":"通过开源项目申请 1Password OpenSource 以获得 Teams 订阅许可证","uri":"/applying-1password-open-source-plan/"},{"categories":["Guides"],"content":"申请流程 创建 1Password Teams 账户 前往注册链接，填写注册信息 注册之后你会发现此时账户处于试用状态，不必担心 邀请至少一位其他用户加入团队的拥有者用户组 (Owners group) 申请时请填写此表格并在此仓库中提交一个新的issue。 ","date":"2025-03-14","objectID":"/applying-1password-open-source-plan/:3:0","tags":["Apply","1Password","OpenSource"],"title":"通过开源项目申请 1Password OpenSource 以获得 Teams 订阅许可证","uri":"/applying-1password-open-source-plan/"},{"categories":["Guides"],"content":"申请完成后 前往团队管理界面 \u003e 账单，你将不会再看到任何有关 到期 相关的字样。 1Password Team 的所有者看不到其他用户的私有数据，但是可以在 Shared 共享保险箱中与他人共享项目，除此之外与 1Password 个人版并无太大差异。 但是你需要注意: 该会员资格不得被转让或出售，因此这个 1Password for Teams 的所有者只能是你；另外，如果你的开源项目不再活跃，1Password 可能会收回你的会员资格。 ","date":"2025-03-14","objectID":"/applying-1password-open-source-plan/:4:0","tags":["Apply","1Password","OpenSource"],"title":"通过开源项目申请 1Password OpenSource 以获得 Teams 订阅许可证","uri":"/applying-1password-open-source-plan/"},{"categories":["Guides"],"content":"1Password 好处都有什么? 支持 macOS, iOS, Windows, Android, Linux, 浏览器插件和命令行 可以生成 SSH Key 公私钥，并使用 1Password-CLI 将其用于 Git Commit 签名或其他自动化 Workflow 调用 1Password-CLI 或者电脑唤醒后可以通过 Windows Hello / Touch ID / Face ID 快速鉴权 (可能之后会支持 Vision Pro 的 Optic ID)，不过电脑重启后或长时间未登录需要强制手动输入主密码 相比于每个网站都使用类似的密码，使用 1Password 可以让你为每个网站都生成不同的密码，以防撞库导致其他网站密码同样泄露 相比在浏览器中保存密码，1Password 可以 减少 因计算机被 Malware 潜入而导致账户密码被盗的情况 自建 Bitwarden Self Host 是一个不错的低成本方案，但是其存在诸多不稳定因素，一旦服务器宕机数据便无法访问。我个人认为 1Password 团队还是比我的运维技术更强的。🙃 其余的可能就需要你探索了… ","date":"2025-03-14","objectID":"/applying-1password-open-source-plan/:5:0","tags":["Apply","1Password","OpenSource"],"title":"通过开源项目申请 1Password OpenSource 以获得 Teams 订阅许可证","uri":"/applying-1password-open-source-plan/"},{"categories":["Build"],"content":"安装环境依赖 brew install automake autoconf libtool pkg-config texinfo coreutils gnu-getopt \\ python@3 cmake ninja ccache bison byacc gettext wget pcre maven llvm@16 openjdk@17 npmDoris master 目前只支持 jdk17 版本 需要设置的环境变量 export JAVA_HOME=\"/opt/homebrew/opt/openjdk@17/libexec/openjdk.jdk/Contents/Home\" export PATH=$JAVA_HOME/bin:$PATH export PATH=\"/opt/homebrew/opt/openjdk@17/bin:$PATH\" export PATH=\"/opt/homebrew/opt/texinfo/bin:$PATH\"","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:1:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":["Build"],"content":"拉取自己的代码 拉取代码 cd ~ mkdir DorisDev cd DorisDev git clone https://github.com/GitHubID/doris.git 设置环境变量 export DORIS_HOME=~/DorisDev/doris export PATH=$DORIS_HOME/bin:$PATH ","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:2:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":["Build"],"content":"下载 Doris 编译依赖 Apache Doris Third Party Prebuilt页面有所有第三方库的源码，可以直接下载doris-thirdparty-source.tgz获得。 可以在Apache Doris Third Party Prebuilt页面直接下载预编译好的第三方库，省去编译第三方库的过程，参考下面的命令。 cd thirdparty rm -rf installed # Intel 芯片 curl -L https://github.com/apache/doris-thirdparty/releases/download/automation/doris-thirdparty-prebuilt-darwin-x86_64.tar.xz \\ -o - | tar -Jxf - # Apple Silicon 芯片 curl -L https://github.com/apache/doris-thirdparty/releases/download/automation/doris-thirdparty-prebuilt-darwin-arm64.tar.xz \\ -o - | tar -Jxf - # 保证 protoc 和 thrift 能够正常运行 cd installed/bin ./protoc --version ./thrift --version 运行protoc和thrift的时候可能会遇到无法打开，因为无法验证开发者的问题，可以到前往安全性与隐私。点按通用面板中的仍要打开按钮，以确认打算打开该二进制。参考https://support.apple.com/zh-cn/HT202491。 ","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:3:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":["Build"],"content":"修改系统最大文件句柄数 # bash echo 'ulimit -n 65536' \u003e\u003e~/.bashrc # zsh echo 'ulimit -n 65536' \u003e\u003e~/.zshrc","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:4:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":["Build"],"content":"编译 Doris cd $DORIS_HOME sh build.sh","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:5:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":["Build"],"content":"编译过程中可能会遇到高版本的 Node.js 导致的错误 M1 目前没遇到过。 opensslErrorStack: [’error:03000086:digital envelope routines::initialization error’] library: ‘digital envelope routines’ reason: ‘unsupported’ code: ‘ERR_OSSL_EVP_UNSUPPORTED’ 以下命令解决问题。参考https://stackoverflow.com/questions/74726224/opensslerrorstack-error03000086digital-envelope-routinesinitialization-e #指示Node.js使用旧版的OpenSSL提供程序 export NODE_OPTIONS=--openssl-legacy-provider","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:6:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":["Build"],"content":"编译过程中可能会遇到 jni.h not found Mac 的 JDK 在更深一层目录。 export JAVA_HOME=\"/opt/homebrew/opt/openjdk@17/libexec/openjdk.jdk/Contents/Home\" export PATH=$JAVA_HOME/bin:$PATH","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:7:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":["Build"],"content":"配置 Debug 环境 # 将编译好的包cp出来 cp -r output ../doris-run # 配置FE/BE的conf，用默认的也行吧 1、IP、目录 2、BE 额外配置 min_file_descriptor_number = 10000","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:8:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":["Build"],"content":"开始用 IDE 进行 Debug 参考官方OK CLion Mac 调试 BE IntelliJ IDEA Mac 调试 FE ","date":"2025-03-09","objectID":"/build-doris-on-macbook-m1/:9:0","tags":["Doris","MacBook","M1"],"title":"Build Doris on MacBook M1","uri":"/build-doris-on-macbook-m1/"},{"categories":null,"content":"关于 LoveIt","date":"2019-08-02","objectID":"/about/","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"  LoveIt 是一个由  Dillon 开发的简洁、优雅且高效的 Hugo 博客主题。 它的原型基于 LeaveIt 主题 和 KeepIt 主题。 Hugo 主题 LoveIt ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"特性 ","date":"2019-08-02","objectID":"/about/:1:0","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"性能和 SEO  性能优化：在 Google PageSpeed Insights 中， 99/100 的移动设备得分和 100/100 的桌面设备得分  使用基于 JSON-LD 格式 的 SEO SCHEMA 文件进行 SEO 优化  支持 Google Analytics  支持 Fathom Analytics  支持 Plausible Analytics  支持 Yandex Metrica  支持搜索引擎的网站验证 (Google, Bind, Yandex 和 Baidu)  支持所有第三方库的 CDN  基于 lazysizes 自动转换图片为懒加载 ","date":"2019-08-02","objectID":"/about/:1:1","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"外观和布局  桌面端/移动端 响应式布局  浅色/深色 主题模式  全局一致的设计语言  支持分页  易用和自动展开的文章目录  支持多语言和国际化  美观的 CSS 动画 社交和评论系统  支持 Gravatar 头像  支持本地头像  支持多达 76 种社交链接  支持多达 24 种网站分享  支持 Disqus 评论系统  支持 Gitalk 评论系统  支持 Valine 评论系统  支持 Facebook comments 评论系统  支持 Telegram comments 评论系统  支持 Commento 评论系统  支持 utterances 评论系统  支持 giscus 评论系统 ","date":"2019-08-02","objectID":"/about/:1:2","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"扩展功能  支持基于 Lunr.js 或 algolia 的搜索  支持 Twemoji  支持代码高亮  一键复制代码到剪贴板  支持基于 lightGallery 的图片画廊  支持 Font Awesome 图标的扩展 Markdown 语法  支持上标注释的扩展 Markdown 语法  支持分数的扩展 Markdown 语法  支持基于 $\\KaTeX$ 的数学公式  支持基于 mermaid 的图表 shortcode  支持基于 ECharts 的交互式数据可视化 shortcode  支持基于 Mapbox GL JS 的 Mapbox shortcode  支持基于 APlayer 和 MetingJS 的音乐播放器 shortcode  支持 Bilibili 视频 shortcode  支持多种注释的 shortcode  支持自定义样式的 shortcode  支持自定义脚本的 shortcode  支持基于 TypeIt 的打字动画 shortcode  支持基于 cookieconsent 的 Cookie 许可横幅  支持人物标签的 shortcode … ","date":"2019-08-02","objectID":"/about/:1:3","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"许可协议 LoveIt 根据 MIT 许可协议授权。 更多信息请查看 LICENSE 文件。 ","date":"2019-08-02","objectID":"/about/:2:0","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"特别感谢 LoveIt 主题中用到了以下项目，感谢它们的作者： modern-normalize Font Awesome Simple Icons Animate.css autocomplete Lunr.js algoliasearch lazysizes object-fit-images Twemoji emoji-data lightGallery clipboard.js Sharer.js TypeIt $\\KaTeX$ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/about/:3:0","tags":null,"title":"关于 LoveIt","uri":"/about/"}]